// This code is generated by AwesomeParserGenerator2000 (by @lexzhe)

package procalculator;

import java.util.ArrayList;
import java.util.List;

public class Tree {
    String node;
    String text = "";
    private static int counter;
    private int myCounter;

    List<Tree> children = new ArrayList<>();

    public Tree(String node) {
        counter++;
        myCounter = counter;
        this.node = node;
    }

    public void add(Tree tree) {
        children.add(tree);
    }

    public String toString() {
        StringBuilder res = new StringBuilder(node);
        res.append('[');
        if (children != null) {
            for (Tree child : children) {
                res.append(child.toString());
                res.append(", ");
            }
        }
        res.append(']');
        return res.toString();
    }

    public String toGraph() {
        StringBuilder stringBuilder = new StringBuilder();
        stringBuilder.append(myCounter).append(" [label = \"").append(node).append("{ ").append(text).append(" }").append("\"];\n");
        for (Tree ch : children) {
            stringBuilder.append(myCounter).append(" -> ").append(ch.getCounter()).append(";\n");
            stringBuilder.append(ch.toGraph());
        }
        return stringBuilder.toString();
    }

    int getCounter() {
        return this.myCounter;
    }

}

